"""
Author: Soumil Ramesh Kulkarni
Date: 02/06/2024

Question:
Given a string, return all strings that can be generated by changing case of one or more letters in it.

{
"s": "a1z"
}
["A1Z", "A1z", "a1Z", "a1z"]
"""

def letter_case_permutations(s):
    """
    Args:
     s(str)
    Returns:
     list_str
    """
    # Write your code here.

    # Root Case
    return_list = []
    _helper(s, 0, [], return_list)
    return return_list

def _helper(s, start_index, slate, result):
    # Base Case
    if start_index == len(s):
        result.append("".join(slate))
        return

    # Recursive Case
    if s[start_index].isdigit():
        slate.append(s[start_index])
        _helper(s, start_index + 1, slate, result)
        slate.pop()
    else:
        # Upper Case
        slate.append(s[start_index].upper())
        _helper(s, start_index + 1, slate, result)
        slate.pop()

        # Lower Case
        slate.append(s[start_index].lower())
        _helper(s, start_index + 1, slate, result)
        slate.pop()
